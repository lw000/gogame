// Code generated by protoc-gen-go. DO NOT EDIT.
// source: center.pb

package centersvr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request 请求数据格式
type Request struct {
	MainId               int32    `protobuf:"varint,1,opt,name=mainId,proto3" json:"mainId,omitempty"`
	SubId                int32    `protobuf:"varint,2,opt,name=subId,proto3" json:"subId,omitempty"`
	RequestId            int32    `protobuf:"varint,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Input                string   `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8c0cfe851104eee, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMainId() int32 {
	if m != nil {
		return m.MainId
	}
	return 0
}

func (m *Request) GetSubId() int32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

func (m *Request) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *Request) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

// Response 响应数据格式
type Response struct {
	MainId               int32    `protobuf:"varint,1,opt,name=mainId,proto3" json:"mainId,omitempty"`
	SubId                int32    `protobuf:"varint,2,opt,name=subId,proto3" json:"subId,omitempty"`
	RequestId            int32    `protobuf:"varint,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Output               string   `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8c0cfe851104eee, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMainId() int32 {
	if m != nil {
		return m.MainId
	}
	return 0
}

func (m *Response) GetSubId() int32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

func (m *Response) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *Response) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type RequestRegisterService struct {
	ServiceId            int32    `protobuf:"varint,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceVersion       string   `protobuf:"bytes,3,opt,name=serviceVersion,proto3" json:"serviceVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRegisterService) Reset()         { *m = RequestRegisterService{} }
func (m *RequestRegisterService) String() string { return proto.CompactTextString(m) }
func (*RequestRegisterService) ProtoMessage()    {}
func (*RequestRegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8c0cfe851104eee, []int{2}
}

func (m *RequestRegisterService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRegisterService.Unmarshal(m, b)
}
func (m *RequestRegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRegisterService.Marshal(b, m, deterministic)
}
func (m *RequestRegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRegisterService.Merge(m, src)
}
func (m *RequestRegisterService) XXX_Size() int {
	return xxx_messageInfo_RequestRegisterService.Size(m)
}
func (m *RequestRegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRegisterService proto.InternalMessageInfo

func (m *RequestRegisterService) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *RequestRegisterService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *RequestRegisterService) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

type ResponseRegisterService struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRegisterService) Reset()         { *m = ResponseRegisterService{} }
func (m *ResponseRegisterService) String() string { return proto.CompactTextString(m) }
func (*ResponseRegisterService) ProtoMessage()    {}
func (*ResponseRegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8c0cfe851104eee, []int{3}
}

func (m *ResponseRegisterService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRegisterService.Unmarshal(m, b)
}
func (m *ResponseRegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRegisterService.Marshal(b, m, deterministic)
}
func (m *ResponseRegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRegisterService.Merge(m, src)
}
func (m *ResponseRegisterService) XXX_Size() int {
	return xxx_messageInfo_ResponseRegisterService.Size(m)
}
func (m *ResponseRegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRegisterService proto.InternalMessageInfo

func (m *ResponseRegisterService) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponseRegisterService) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "centersvr.Request")
	proto.RegisterType((*Response)(nil), "centersvr.Response")
	proto.RegisterType((*RequestRegisterService)(nil), "centersvr.RequestRegisterService")
	proto.RegisterType((*ResponseRegisterService)(nil), "centersvr.ResponseRegisterService")
}

func init() { proto.RegisterFile("center.pb", fileDescriptor_f8c0cfe851104eee) }

var fileDescriptor_f8c0cfe851104eee = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x6b, 0x4a, 0x03, 0x3e, 0x24, 0x40, 0x06, 0x85, 0xa8, 0x62, 0x28, 0x1e, 0x50, 0xa7,
	0x0a, 0xc1, 0xc6, 0x48, 0xa7, 0x2c, 0x0c, 0xae, 0xc4, 0xc0, 0x96, 0x34, 0xa7, 0xca, 0x42, 0x71,
	0x82, 0xcf, 0xe9, 0xcc, 0x4f, 0xe1, 0xa7, 0xa2, 0xc4, 0x6e, 0x03, 0x81, 0x91, 0xed, 0xbe, 0x17,
	0xdf, 0xbd, 0x77, 0x39, 0xe0, 0x6b, 0x34, 0x0e, 0xed, 0xa2, 0xce, 0x45, 0x28, 0x69, 0x6b, 0xe5,
	0x1b, 0x1c, 0x29, 0x7c, 0x6f, 0x90, 0x9c, 0x88, 0x21, 0x2a, 0x33, 0x6d, 0xd2, 0x22, 0x61, 0x33,
	0x36, 0x9f, 0xa8, 0x40, 0xe2, 0x12, 0x26, 0xd4, 0xe4, 0x69, 0x91, 0x1c, 0x74, 0xb2, 0x07, 0x71,
	0x0d, 0xdc, 0xfa, 0xc6, 0xb4, 0x48, 0xc6, 0xdd, 0x97, 0x5e, 0x68, 0x7b, 0xb4, 0xa9, 0x1b, 0x97,
	0x1c, 0xce, 0xd8, 0x9c, 0x2b, 0x0f, 0xd2, 0xc0, 0xb1, 0x42, 0xaa, 0x2b, 0x43, 0xf8, 0xaf, 0x6e,
	0x31, 0x44, 0x55, 0xe3, 0x7a, 0xbb, 0x40, 0xf2, 0x83, 0x41, 0x1c, 0xb6, 0x53, 0xb8, 0xd1, 0xe4,
	0xd0, 0xae, 0xd0, 0x6e, 0xf5, 0x1a, 0xdb, 0x81, 0xe4, 0xcb, 0x7d, 0x82, 0x5e, 0x10, 0x33, 0x38,
	0x09, 0xf0, 0x9c, 0x95, 0xd8, 0x45, 0xe1, 0xea, 0xbb, 0x24, 0x6e, 0xe1, 0x34, 0xe0, 0x0b, 0x5a,
	0xd2, 0x95, 0xe9, 0x52, 0x71, 0x35, 0x50, 0xe5, 0x12, 0xae, 0x76, 0x2b, 0x0f, 0x23, 0xc4, 0x10,
	0x91, 0xcb, 0x5c, 0x43, 0xbb, 0x3f, 0xe0, 0x49, 0x9c, 0xc3, 0xb8, 0xa4, 0x4d, 0x30, 0x6d, 0xcb,
	0xfb, 0x4f, 0x06, 0xd1, 0xb2, 0x3b, 0x99, 0x78, 0x04, 0xfe, 0xa4, 0x8b, 0x95, 0xb3, 0x98, 0x95,
	0x42, 0x2c, 0xf6, 0x87, 0x5c, 0x84, 0x3d, 0xa7, 0x17, 0x3f, 0x34, 0xef, 0x2c, 0x47, 0x73, 0x76,
	0xc7, 0xc4, 0x2b, 0x9c, 0x0d, 0x33, 0xdc, 0xfc, 0x9e, 0x30, 0x78, 0x32, 0x95, 0x7f, 0x0c, 0x1c,
	0xbc, 0x91, 0xa3, 0x3c, 0xaa, 0x6d, 0xe5, 0xaa, 0x87, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x73,
	0x9f, 0xd4, 0x88, 0x66, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CenterClient is the client API for Center service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CenterClient interface {
	BidStream(ctx context.Context, opts ...grpc.CallOption) (Center_BidStreamClient, error)
	RegisterService(ctx context.Context, in *RequestRegisterService, opts ...grpc.CallOption) (*ResponseRegisterService, error)
}

type centerClient struct {
	cc *grpc.ClientConn
}

func NewCenterClient(cc *grpc.ClientConn) CenterClient {
	return &centerClient{cc}
}

func (c *centerClient) BidStream(ctx context.Context, opts ...grpc.CallOption) (Center_BidStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Center_serviceDesc.Streams[0], "/centersvr.Center/BidStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &centerBidStreamClient{stream}
	return x, nil
}

type Center_BidStreamClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type centerBidStreamClient struct {
	grpc.ClientStream
}

func (x *centerBidStreamClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *centerBidStreamClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *centerClient) RegisterService(ctx context.Context, in *RequestRegisterService, opts ...grpc.CallOption) (*ResponseRegisterService, error) {
	out := new(ResponseRegisterService)
	err := c.cc.Invoke(ctx, "/centersvr.Center/RegisterService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CenterServer is the server API for Center service.
type CenterServer interface {
	BidStream(Center_BidStreamServer) error
	RegisterService(context.Context, *RequestRegisterService) (*ResponseRegisterService, error)
}

func RegisterCenterServer(s *grpc.Server, srv CenterServer) {
	s.RegisterService(&_Center_serviceDesc, srv)
}

func _Center_BidStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CenterServer).BidStream(&centerBidStreamServer{stream})
}

type Center_BidStreamServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type centerBidStreamServer struct {
	grpc.ServerStream
}

func (x *centerBidStreamServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *centerBidStreamServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Center_RegisterService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRegisterService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServer).RegisterService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/centersvr.Center/RegisterService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServer).RegisterService(ctx, req.(*RequestRegisterService))
	}
	return interceptor(ctx, in, info, handler)
}

var _Center_serviceDesc = grpc.ServiceDesc{
	ServiceName: "centersvr.Center",
	HandlerType: (*CenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterService",
			Handler:    _Center_RegisterService_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BidStream",
			Handler:       _Center_BidStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "center.pb",
}
