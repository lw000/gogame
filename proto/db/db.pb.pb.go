// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db.pb

package dbsvr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request 请求数据格式
type Request struct {
	MainId               int32    `protobuf:"varint,1,opt,name=mainId,proto3" json:"mainId,omitempty"`
	SubId                int32    `protobuf:"varint,2,opt,name=subId,proto3" json:"subId,omitempty"`
	RequestId            int32    `protobuf:"varint,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Input                string   `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59f1d271962a845, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMainId() int32 {
	if m != nil {
		return m.MainId
	}
	return 0
}

func (m *Request) GetSubId() int32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

func (m *Request) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *Request) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

// Response 响应数据格式
type Response struct {
	MainId               int32    `protobuf:"varint,1,opt,name=mainId,proto3" json:"mainId,omitempty"`
	SubId                int32    `protobuf:"varint,2,opt,name=subId,proto3" json:"subId,omitempty"`
	RequestId            int32    `protobuf:"varint,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Output               string   `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59f1d271962a845, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMainId() int32 {
	if m != nil {
		return m.MainId
	}
	return 0
}

func (m *Response) GetSubId() int32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

func (m *Response) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *Response) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type RequestRegisterService struct {
	ServiceId            int32    `protobuf:"varint,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceVersion       string   `protobuf:"bytes,3,opt,name=serviceVersion,proto3" json:"serviceVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRegisterService) Reset()         { *m = RequestRegisterService{} }
func (m *RequestRegisterService) String() string { return proto.CompactTextString(m) }
func (*RequestRegisterService) ProtoMessage()    {}
func (*RequestRegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59f1d271962a845, []int{2}
}

func (m *RequestRegisterService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRegisterService.Unmarshal(m, b)
}
func (m *RequestRegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRegisterService.Marshal(b, m, deterministic)
}
func (m *RequestRegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRegisterService.Merge(m, src)
}
func (m *RequestRegisterService) XXX_Size() int {
	return xxx_messageInfo_RequestRegisterService.Size(m)
}
func (m *RequestRegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRegisterService proto.InternalMessageInfo

func (m *RequestRegisterService) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *RequestRegisterService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *RequestRegisterService) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

type ResponseRegisterService struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRegisterService) Reset()         { *m = ResponseRegisterService{} }
func (m *ResponseRegisterService) String() string { return proto.CompactTextString(m) }
func (*ResponseRegisterService) ProtoMessage()    {}
func (*ResponseRegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59f1d271962a845, []int{3}
}

func (m *ResponseRegisterService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRegisterService.Unmarshal(m, b)
}
func (m *ResponseRegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRegisterService.Marshal(b, m, deterministic)
}
func (m *ResponseRegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRegisterService.Merge(m, src)
}
func (m *ResponseRegisterService) XXX_Size() int {
	return xxx_messageInfo_ResponseRegisterService.Size(m)
}
func (m *ResponseRegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRegisterService proto.InternalMessageInfo

func (m *ResponseRegisterService) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponseRegisterService) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "dbsvr.Request")
	proto.RegisterType((*Response)(nil), "dbsvr.Response")
	proto.RegisterType((*RequestRegisterService)(nil), "dbsvr.RequestRegisterService")
	proto.RegisterType((*ResponseRegisterService)(nil), "dbsvr.ResponseRegisterService")
}

func init() { proto.RegisterFile("db.pb", fileDescriptor_b59f1d271962a845) }

var fileDescriptor_b59f1d271962a845 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xeb, 0x96, 0x04, 0x72, 0x48, 0x2d, 0xb2, 0x50, 0x88, 0x2a, 0x40, 0x91, 0x07, 0x94,
	0x29, 0x42, 0xe5, 0x0d, 0x0a, 0x4b, 0x16, 0x06, 0x57, 0x62, 0x4f, 0xb0, 0x55, 0x59, 0x28, 0x7f,
	0xf0, 0x39, 0x9d, 0x79, 0x00, 0x1e, 0x1a, 0x25, 0x76, 0x1b, 0xf0, 0xcc, 0x76, 0xbf, 0xef, 0x74,
	0xf7, 0x7d, 0x67, 0x43, 0x20, 0xaa, 0xbc, 0xab, 0x68, 0x20, 0x2a, 0x3c, 0x68, 0xf6, 0x01, 0xe7,
	0x5c, 0x7e, 0xf6, 0x12, 0x0d, 0x8d, 0x21, 0xac, 0x4b, 0xd5, 0x14, 0x22, 0x21, 0x29, 0xc9, 0x02,
	0xee, 0x88, 0x5e, 0x43, 0x80, 0x7d, 0x55, 0x88, 0x64, 0x3e, 0xca, 0x16, 0xe8, 0x2d, 0x44, 0xda,
	0x0e, 0x16, 0x22, 0x59, 0x8c, 0x9d, 0x49, 0x18, 0x66, 0x54, 0xd3, 0xf5, 0x26, 0x39, 0x4b, 0x49,
	0x16, 0x71, 0x0b, 0xac, 0x81, 0x0b, 0x2e, 0xb1, 0x6b, 0x1b, 0x94, 0xff, 0xea, 0x16, 0x43, 0xd8,
	0xf6, 0x66, 0xb2, 0x73, 0xc4, 0xbe, 0x08, 0xc4, 0xee, 0x3a, 0x2e, 0xf7, 0x0a, 0x8d, 0xd4, 0x3b,
	0xa9, 0x0f, 0xea, 0x5d, 0x0e, 0x0b, 0xd1, 0x96, 0xa7, 0x04, 0x93, 0x40, 0x53, 0xb8, 0x74, 0xf0,
	0x5a, 0xd6, 0x72, 0x8c, 0x12, 0xf1, 0xdf, 0x12, 0x7d, 0x80, 0xa5, 0xc3, 0x37, 0xa9, 0x51, 0xb5,
	0xcd, 0x98, 0x2a, 0xe2, 0x9e, 0xca, 0x9e, 0xe1, 0xe6, 0x78, 0xb2, 0x1f, 0x21, 0x86, 0x10, 0x4d,
	0x69, 0x7a, 0x3c, 0xbe, 0x80, 0x25, 0x7a, 0x05, 0x8b, 0x1a, 0xf7, 0xce, 0x74, 0x28, 0x37, 0xdf,
	0x04, 0xe6, 0x2f, 0x5b, 0xba, 0x81, 0x68, 0xab, 0xc4, 0xce, 0x68, 0x59, 0xd6, 0x74, 0x99, 0x8f,
	0x1f, 0x98, 0xbb, 0xfb, 0xd6, 0xab, 0x13, 0x5b, 0x37, 0x36, 0xcb, 0xc8, 0x23, 0xa1, 0x1c, 0x56,
	0xbe, 0xef, 0xdd, 0xdf, 0x49, 0xaf, 0xbd, 0xbe, 0xf7, 0x16, 0x79, 0x7d, 0x36, 0xab, 0xc2, 0x4e,
	0xb7, 0xa6, 0x7d, 0xfa, 0x09, 0x00, 0x00, 0xff, 0xff, 0x21, 0x3c, 0x17, 0xd0, 0x4a, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DBClient is the client API for DB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DBClient interface {
	BidStream(ctx context.Context, opts ...grpc.CallOption) (DB_BidStreamClient, error)
	RegisterService(ctx context.Context, in *RequestRegisterService, opts ...grpc.CallOption) (*ResponseRegisterService, error)
}

type dBClient struct {
	cc *grpc.ClientConn
}

func NewDBClient(cc *grpc.ClientConn) DBClient {
	return &dBClient{cc}
}

func (c *dBClient) BidStream(ctx context.Context, opts ...grpc.CallOption) (DB_BidStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DB_serviceDesc.Streams[0], "/dbsvr.DB/BidStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &dBBidStreamClient{stream}
	return x, nil
}

type DB_BidStreamClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type dBBidStreamClient struct {
	grpc.ClientStream
}

func (x *dBBidStreamClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dBBidStreamClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dBClient) RegisterService(ctx context.Context, in *RequestRegisterService, opts ...grpc.CallOption) (*ResponseRegisterService, error) {
	out := new(ResponseRegisterService)
	err := c.cc.Invoke(ctx, "/dbsvr.DB/RegisterService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DBServer is the server API for DB service.
type DBServer interface {
	BidStream(DB_BidStreamServer) error
	RegisterService(context.Context, *RequestRegisterService) (*ResponseRegisterService, error)
}

func RegisterDBServer(s *grpc.Server, srv DBServer) {
	s.RegisterService(&_DB_serviceDesc, srv)
}

func _DB_BidStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DBServer).BidStream(&dBBidStreamServer{stream})
}

type DB_BidStreamServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type dBBidStreamServer struct {
	grpc.ServerStream
}

func (x *dBBidStreamServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dBBidStreamServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DB_RegisterService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRegisterService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServer).RegisterService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbsvr.DB/RegisterService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServer).RegisterService(ctx, req.(*RequestRegisterService))
	}
	return interceptor(ctx, in, info, handler)
}

var _DB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dbsvr.DB",
	HandlerType: (*DBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterService",
			Handler:    _DB_RegisterService_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BidStream",
			Handler:       _DB_BidStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "db.pb",
}
