// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router.pb

package routersvr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Message 数据格式
type RequestMessage struct {
	ServiceId            int32    `protobuf:"varint,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceVersion       string   `protobuf:"bytes,3,opt,name=serviceVersion,proto3" json:"serviceVersion,omitempty"`
	Uuid                 string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Msg                  []byte   `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestMessage) Reset()         { *m = RequestMessage{} }
func (m *RequestMessage) String() string { return proto.CompactTextString(m) }
func (*RequestMessage) ProtoMessage()    {}
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_af85e721a6243de1, []int{0}
}

func (m *RequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestMessage.Unmarshal(m, b)
}
func (m *RequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestMessage.Marshal(b, m, deterministic)
}
func (m *RequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestMessage.Merge(m, src)
}
func (m *RequestMessage) XXX_Size() int {
	return xxx_messageInfo_RequestMessage.Size(m)
}
func (m *RequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RequestMessage proto.InternalMessageInfo

func (m *RequestMessage) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *RequestMessage) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *RequestMessage) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

func (m *RequestMessage) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RequestMessage) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type ReponseMessage struct {
	ServiceId            int32    `protobuf:"varint,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceVersion       string   `protobuf:"bytes,3,opt,name=serviceVersion,proto3" json:"serviceVersion,omitempty"`
	Uuid                 string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Msg                  []byte   `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReponseMessage) Reset()         { *m = ReponseMessage{} }
func (m *ReponseMessage) String() string { return proto.CompactTextString(m) }
func (*ReponseMessage) ProtoMessage()    {}
func (*ReponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_af85e721a6243de1, []int{1}
}

func (m *ReponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReponseMessage.Unmarshal(m, b)
}
func (m *ReponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReponseMessage.Marshal(b, m, deterministic)
}
func (m *ReponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReponseMessage.Merge(m, src)
}
func (m *ReponseMessage) XXX_Size() int {
	return xxx_messageInfo_ReponseMessage.Size(m)
}
func (m *ReponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReponseMessage proto.InternalMessageInfo

func (m *ReponseMessage) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *ReponseMessage) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ReponseMessage) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

func (m *ReponseMessage) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ReponseMessage) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestMessage)(nil), "routersvr.RequestMessage")
	proto.RegisterType((*ReponseMessage)(nil), "routersvr.ReponseMessage")
}

func init() { proto.RegisterFile("router.pb", fileDescriptor_af85e721a6243de1) }

var fileDescriptor_af85e721a6243de1 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x90, 0xbf, 0x4a, 0xc7, 0x30,
	0x10, 0xc7, 0x8d, 0xbf, 0x5f, 0x0b, 0x3d, 0xa5, 0xc8, 0x4d, 0x51, 0x1c, 0x42, 0x07, 0xc9, 0x54,
	0x44, 0xdf, 0xc0, 0x49, 0x07, 0x1d, 0x22, 0xb8, 0xb7, 0xf6, 0x28, 0x19, 0xda, 0xd4, 0x5c, 0xd2,
	0xc7, 0xf1, 0x59, 0xc5, 0x10, 0xb4, 0xf5, 0x09, 0xdc, 0xbe, 0x7f, 0x6e, 0xf8, 0xde, 0x07, 0x2a,
	0xef, 0x62, 0x20, 0xdf, 0x2e, 0x3d, 0x66, 0xc9, 0xab, 0x6f, 0x3e, 0x05, 0xd4, 0x86, 0x3e, 0x22,
	0x71, 0x78, 0x26, 0xe6, 0x6e, 0x24, 0xbc, 0x86, 0x8a, 0xc9, 0xaf, 0xf6, 0x9d, 0x9e, 0x06, 0x29,
	0x94, 0xd0, 0x85, 0xf9, 0x0d, 0x50, 0xc1, 0x59, 0x36, 0x2f, 0xdd, 0x44, 0xf2, 0x54, 0x09, 0x5d,
	0x99, 0x6d, 0x84, 0x37, 0x50, 0x67, 0xfb, 0x46, 0x9e, 0xad, 0x9b, 0xe5, 0x21, 0x1d, 0xfd, 0x49,
	0x11, 0xe1, 0x18, 0xa3, 0x1d, 0xe4, 0x31, 0xb5, 0x49, 0xe3, 0x05, 0x1c, 0x26, 0x1e, 0x65, 0xa1,
	0x84, 0x3e, 0x37, 0xdf, 0x32, 0x0f, 0x5c, 0xdc, 0xcc, 0xf4, 0x2f, 0x07, 0xde, 0x19, 0x28, 0x4d,
	0xc2, 0x89, 0x8f, 0x00, 0x0f, 0x76, 0x1e, 0x5e, 0x83, 0xa7, 0x6e, 0xc2, 0xcb, 0xf6, 0x87, 0x72,
	0xbb, 0x27, 0x7c, 0xb5, 0xaf, 0xb6, 0xbf, 0x35, 0x27, 0x5a, 0xdc, 0x8a, 0xbe, 0x5c, 0xbc, 0x0b,
	0xee, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x26, 0x6f, 0xde, 0xf9, 0xb4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouterClient is the client API for Router service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterClient interface {
	BindStream(ctx context.Context, opts ...grpc.CallOption) (Router_BindStreamClient, error)
}

type routerClient struct {
	cc *grpc.ClientConn
}

func NewRouterClient(cc *grpc.ClientConn) RouterClient {
	return &routerClient{cc}
}

func (c *routerClient) BindStream(ctx context.Context, opts ...grpc.CallOption) (Router_BindStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Router_serviceDesc.Streams[0], "/routersvr.Router/BindStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &routerBindStreamClient{stream}
	return x, nil
}

type Router_BindStreamClient interface {
	Send(*RequestMessage) error
	Recv() (*ReponseMessage, error)
	grpc.ClientStream
}

type routerBindStreamClient struct {
	grpc.ClientStream
}

func (x *routerBindStreamClient) Send(m *RequestMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *routerBindStreamClient) Recv() (*ReponseMessage, error) {
	m := new(ReponseMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RouterServer is the server API for Router service.
type RouterServer interface {
	BindStream(Router_BindStreamServer) error
}

func RegisterRouterServer(s *grpc.Server, srv RouterServer) {
	s.RegisterService(&_Router_serviceDesc, srv)
}

func _Router_BindStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RouterServer).BindStream(&routerBindStreamServer{stream})
}

type Router_BindStreamServer interface {
	Send(*ReponseMessage) error
	Recv() (*RequestMessage, error)
	grpc.ServerStream
}

type routerBindStreamServer struct {
	grpc.ServerStream
}

func (x *routerBindStreamServer) Send(m *ReponseMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *routerBindStreamServer) Recv() (*RequestMessage, error) {
	m := new(RequestMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Router_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routersvr.Router",
	HandlerType: (*RouterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BindStream",
			Handler:       _Router_BindStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "router.pb",
}
