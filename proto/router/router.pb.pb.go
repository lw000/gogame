// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router.pb

package routersvr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ForwardMessage 转发数据格式
type ForwardMessage struct {
	ServiceId            int32    `protobuf:"varint,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardMessage) Reset()         { *m = ForwardMessage{} }
func (m *ForwardMessage) String() string { return proto.CompactTextString(m) }
func (*ForwardMessage) ProtoMessage()    {}
func (*ForwardMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_af85e721a6243de1, []int{0}
}

func (m *ForwardMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardMessage.Unmarshal(m, b)
}
func (m *ForwardMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardMessage.Marshal(b, m, deterministic)
}
func (m *ForwardMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardMessage.Merge(m, src)
}
func (m *ForwardMessage) XXX_Size() int {
	return xxx_messageInfo_ForwardMessage.Size(m)
}
func (m *ForwardMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardMessage proto.InternalMessageInfo

func (m *ForwardMessage) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *ForwardMessage) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ForwardMessage) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type RequestRegisterService struct {
	ServiceId            int32             `protobuf:"varint,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceName          string            `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceVersion       string            `protobuf:"bytes,3,opt,name=serviceVersion,proto3" json:"serviceVersion,omitempty"`
	SrviceProtocol       string            `protobuf:"bytes,4,opt,name=srviceProtocol,proto3" json:"srviceProtocol,omitempty"`
	Protocols            []*RouterProtocol `protobuf:"bytes,5,rep,name=protocols,proto3" json:"protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RequestRegisterService) Reset()         { *m = RequestRegisterService{} }
func (m *RequestRegisterService) String() string { return proto.CompactTextString(m) }
func (*RequestRegisterService) ProtoMessage()    {}
func (*RequestRegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_af85e721a6243de1, []int{1}
}

func (m *RequestRegisterService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRegisterService.Unmarshal(m, b)
}
func (m *RequestRegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRegisterService.Marshal(b, m, deterministic)
}
func (m *RequestRegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRegisterService.Merge(m, src)
}
func (m *RequestRegisterService) XXX_Size() int {
	return xxx_messageInfo_RequestRegisterService.Size(m)
}
func (m *RequestRegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRegisterService proto.InternalMessageInfo

func (m *RequestRegisterService) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *RequestRegisterService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *RequestRegisterService) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

func (m *RequestRegisterService) GetSrviceProtocol() string {
	if m != nil {
		return m.SrviceProtocol
	}
	return ""
}

func (m *RequestRegisterService) GetProtocols() []*RouterProtocol {
	if m != nil {
		return m.Protocols
	}
	return nil
}

type ResponseRegisterService struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRegisterService) Reset()         { *m = ResponseRegisterService{} }
func (m *ResponseRegisterService) String() string { return proto.CompactTextString(m) }
func (*ResponseRegisterService) ProtoMessage()    {}
func (*ResponseRegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_af85e721a6243de1, []int{2}
}

func (m *ResponseRegisterService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRegisterService.Unmarshal(m, b)
}
func (m *ResponseRegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRegisterService.Marshal(b, m, deterministic)
}
func (m *ResponseRegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRegisterService.Merge(m, src)
}
func (m *ResponseRegisterService) XXX_Size() int {
	return xxx_messageInfo_ResponseRegisterService.Size(m)
}
func (m *ResponseRegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRegisterService proto.InternalMessageInfo

func (m *ResponseRegisterService) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponseRegisterService) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ResponseRegisterService) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type RouterProtocol struct {
	MainId               int32    `protobuf:"varint,2,opt,name=mainId,proto3" json:"mainId,omitempty"`
	SubId                int32    `protobuf:"varint,3,opt,name=subId,proto3" json:"subId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouterProtocol) Reset()         { *m = RouterProtocol{} }
func (m *RouterProtocol) String() string { return proto.CompactTextString(m) }
func (*RouterProtocol) ProtoMessage()    {}
func (*RouterProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_af85e721a6243de1, []int{3}
}

func (m *RouterProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouterProtocol.Unmarshal(m, b)
}
func (m *RouterProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouterProtocol.Marshal(b, m, deterministic)
}
func (m *RouterProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouterProtocol.Merge(m, src)
}
func (m *RouterProtocol) XXX_Size() int {
	return xxx_messageInfo_RouterProtocol.Size(m)
}
func (m *RouterProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_RouterProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_RouterProtocol proto.InternalMessageInfo

func (m *RouterProtocol) GetMainId() int32 {
	if m != nil {
		return m.MainId
	}
	return 0
}

func (m *RouterProtocol) GetSubId() int32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

func init() {
	proto.RegisterType((*ForwardMessage)(nil), "routersvr.ForwardMessage")
	proto.RegisterType((*RequestRegisterService)(nil), "routersvr.RequestRegisterService")
	proto.RegisterType((*ResponseRegisterService)(nil), "routersvr.ResponseRegisterService")
	proto.RegisterType((*RouterProtocol)(nil), "routersvr.RouterProtocol")
}

func init() { proto.RegisterFile("router.pb", fileDescriptor_af85e721a6243de1) }

var fileDescriptor_af85e721a6243de1 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0xed, 0xb6, 0x4d, 0x21, 0xd3, 0x1f, 0xfd, 0xc9, 0x52, 0x6a, 0x2c, 0x1e, 0x62, 0x0e, 0x92,
	0x53, 0x91, 0x7a, 0xf0, 0xe6, 0x49, 0xc4, 0x1e, 0x14, 0xd9, 0x8a, 0x82, 0xb7, 0x6d, 0x33, 0x84,
	0x80, 0xc9, 0xd6, 0x9d, 0x4d, 0xbd, 0xfb, 0x4d, 0xfd, 0x26, 0xd2, 0xcd, 0xda, 0x36, 0xa5, 0x52,
	0xf0, 0xf6, 0xde, 0xcb, 0xdb, 0x37, 0x99, 0x3f, 0xe0, 0x6b, 0x55, 0x1a, 0xd4, 0xa3, 0xc5, 0x8c,
	0x3b, 0x48, 0x4b, 0x1d, 0x3d, 0x41, 0xef, 0x56, 0xe9, 0x0f, 0xa9, 0x93, 0x7b, 0x24, 0x92, 0x29,
	0xf2, 0x53, 0xf0, 0x09, 0xf5, 0x32, 0x9b, 0xe3, 0x24, 0x09, 0x58, 0xc8, 0x62, 0x4f, 0x6c, 0x04,
	0xce, 0xa1, 0x5d, 0x96, 0x59, 0x12, 0x34, 0x43, 0x16, 0xfb, 0xc2, 0x62, 0x7e, 0x04, 0xad, 0x9c,
	0xd2, 0xa0, 0x15, 0xb2, 0xf8, 0x9f, 0x58, 0xc1, 0xe8, 0x8b, 0xc1, 0x40, 0xe0, 0x7b, 0x89, 0x64,
	0x04, 0xa6, 0x19, 0x19, 0xd4, 0xd3, 0x2a, 0xe2, 0x40, 0x7c, 0x08, 0x5d, 0x47, 0x1e, 0x64, 0x8e,
	0xae, 0xca, 0xb6, 0xc4, 0xcf, 0xa1, 0xe7, 0xe8, 0x33, 0x6a, 0xca, 0x54, 0x61, 0xeb, 0xfa, 0x62,
	0x47, 0xb5, 0x3e, 0x2b, 0x3c, 0x6a, 0x65, 0xd4, 0x5c, 0xbd, 0x05, 0x6d, 0xe7, 0xab, 0xa9, 0xfc,
	0x0a, 0xfc, 0x85, 0xc3, 0x14, 0x78, 0x61, 0x2b, 0xee, 0x8e, 0x4f, 0x46, 0xeb, 0xf9, 0x8c, 0x84,
	0x45, 0x3f, 0x6e, 0xb1, 0xf1, 0x46, 0x2f, 0x70, 0x2c, 0x90, 0x16, 0xaa, 0x20, 0xdc, 0xed, 0x71,
	0x00, 0x1d, 0x32, 0xd2, 0x94, 0xe4, 0x1a, 0x74, 0xec, 0xd0, 0xf0, 0xfc, 0x6a, 0x78, 0xd7, 0xd0,
	0xab, 0x57, 0x5d, 0xe5, 0xe5, 0x32, 0x2b, 0x26, 0xd5, 0x4b, 0x4f, 0x38, 0xc6, 0xfb, 0xe0, 0x51,
	0x39, 0x9b, 0x24, 0xf6, 0xb5, 0x27, 0x2a, 0x32, 0xfe, 0x6c, 0x42, 0xa7, 0x0a, 0xe0, 0xaf, 0xf0,
	0x7f, 0xf7, 0xdf, 0xce, 0xb6, 0x9b, 0xdb, 0xbb, 0xa2, 0x61, 0x54, 0xb3, 0xec, 0x6d, 0x31, 0x6a,
	0x70, 0x01, 0x7d, 0x77, 0x39, 0x59, 0x91, 0xde, 0x48, 0x23, 0xa7, 0x46, 0xa3, 0xcc, 0xf9, 0xf6,
	0xf4, 0xea, 0xa7, 0x35, 0xfc, 0xfd, 0x53, 0xd4, 0x88, 0xd9, 0x05, 0xe3, 0x77, 0xeb, 0x6b, 0x74,
	0x99, 0x7f, 0x4d, 0x9b, 0x75, 0xec, 0xa2, 0x2e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xf8,
	0xb5, 0xe0, 0xf6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouterClient is the client API for Router service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterClient interface {
	RegisterService(ctx context.Context, in *RequestRegisterService, opts ...grpc.CallOption) (*ResponseRegisterService, error)
	ForwardingDataStream(ctx context.Context, opts ...grpc.CallOption) (Router_ForwardingDataStreamClient, error)
	ForwardingData(ctx context.Context, in *ForwardMessage, opts ...grpc.CallOption) (*ForwardMessage, error)
}

type routerClient struct {
	cc *grpc.ClientConn
}

func NewRouterClient(cc *grpc.ClientConn) RouterClient {
	return &routerClient{cc}
}

func (c *routerClient) RegisterService(ctx context.Context, in *RequestRegisterService, opts ...grpc.CallOption) (*ResponseRegisterService, error) {
	out := new(ResponseRegisterService)
	err := c.cc.Invoke(ctx, "/routersvr.Router/RegisterService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routerClient) ForwardingDataStream(ctx context.Context, opts ...grpc.CallOption) (Router_ForwardingDataStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Router_serviceDesc.Streams[0], "/routersvr.Router/ForwardingDataStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &routerForwardingDataStreamClient{stream}
	return x, nil
}

type Router_ForwardingDataStreamClient interface {
	Send(*ForwardMessage) error
	Recv() (*ForwardMessage, error)
	grpc.ClientStream
}

type routerForwardingDataStreamClient struct {
	grpc.ClientStream
}

func (x *routerForwardingDataStreamClient) Send(m *ForwardMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *routerForwardingDataStreamClient) Recv() (*ForwardMessage, error) {
	m := new(ForwardMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *routerClient) ForwardingData(ctx context.Context, in *ForwardMessage, opts ...grpc.CallOption) (*ForwardMessage, error) {
	out := new(ForwardMessage)
	err := c.cc.Invoke(ctx, "/routersvr.Router/ForwardingData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouterServer is the server API for Router service.
type RouterServer interface {
	RegisterService(context.Context, *RequestRegisterService) (*ResponseRegisterService, error)
	ForwardingDataStream(Router_ForwardingDataStreamServer) error
	ForwardingData(context.Context, *ForwardMessage) (*ForwardMessage, error)
}

func RegisterRouterServer(s *grpc.Server, srv RouterServer) {
	s.RegisterService(&_Router_serviceDesc, srv)
}

func _Router_RegisterService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRegisterService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).RegisterService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routersvr.Router/RegisterService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).RegisterService(ctx, req.(*RequestRegisterService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Router_ForwardingDataStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RouterServer).ForwardingDataStream(&routerForwardingDataStreamServer{stream})
}

type Router_ForwardingDataStreamServer interface {
	Send(*ForwardMessage) error
	Recv() (*ForwardMessage, error)
	grpc.ServerStream
}

type routerForwardingDataStreamServer struct {
	grpc.ServerStream
}

func (x *routerForwardingDataStreamServer) Send(m *ForwardMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *routerForwardingDataStreamServer) Recv() (*ForwardMessage, error) {
	m := new(ForwardMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Router_ForwardingData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForwardMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).ForwardingData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routersvr.Router/ForwardingData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).ForwardingData(ctx, req.(*ForwardMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Router_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routersvr.Router",
	HandlerType: (*RouterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterService",
			Handler:    _Router_RegisterService_Handler,
		},
		{
			MethodName: "ForwardingData",
			Handler:    _Router_ForwardingData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ForwardingDataStream",
			Handler:       _Router_ForwardingDataStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "router.pb",
}
